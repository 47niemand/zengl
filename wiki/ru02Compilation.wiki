= Компиляция =

== Поддерживаемые версии компиляторовs ==

ZenGL возможно скомпилировать при помощи двух основных компиляторов языка Pascal - [http://freepascal.org FreePascal] и [http://www.embarcadero.com/products/delphi Delphi].

=== FreePascal ===

На данный момент официально поддерживаются все версии из веток 2.4.х и 2.2.х, но настоятельно рекомендуется использовать версию 2.4.2. Если по каким-либо причинам необходимо использовать ветку 2.2.х, то необходимо обновить FreePascal до версии 2.2.4.

=== Delphi ===

Корректность компиляции ZenGL, примеров и дополнительных модулей проверяется в Delphi 7, Delphi 2009 и Delphi 2010. Но возможно использовать и другие версии Delphi выше седьмой. При возникновении проблем прошу сообщить об этом.

== Компиляция ZenGL в различных ОС ==

=== GNU/Linux ===

Для компиляции в GNU/Linux с ZenGL поставляется Makefile и файл проекта для Lazarus. Makefile находится в каталоге *src* вместе с исходным кодом библиотеки. Файл проекта для Lazarus находится в каталоге *src/Lazarus*. При помощи Makefile так же возможна кросскомпиляция под Windows(команды *make win32* и *make win64*).

Дополнительно для компиляции в некоторых дистрибутивах(например в Debian и Ubuntu) потребуются эти dev-пакеты:
  * libgl1-mesa-dev
  * libglu1-mesa-dev

=== Windows ===

Для Windows существует два способа компиляции - при помощи Delphi и Lazarus. Файлы проектов для этих IDE находятся в каталогах *Delphi* и *Lazarus* внутри каталога с исходным кодом - *src*. При использовании Lazarus рекомендуется использовать файл проекта *ZenGL-win.lpi*.

=== MacOS X ===

Как и при компиляции в GNU/Linux в MacOS X доступен Makefile. Вместо обычной команды *make* нужно выполнить *make macos*, после чего будет скомпилирована 32-х битная универсальная библиотека dylib для архитектур x86 и PowerPC.

== Статическая компиляция приложения с ZenGL ==

При статической компиляции приложения с ZenGL помимо указания пути к исходным кодам и extra-модулям, необходимо указать пути к некоторым объектным файлам. Они расположены в каталоге *lib*. Для Delphi необходимо указать только этот путь:
{{{
lib/zlib/delphi
}}}

Для FreePascal и Lazarus ситуация немного сложнее - необходимо указывать пути используя целевую архитектуру и ОС. В Lazarus это выглядит следующим образом(TargetCPU и TargetOS стандартные переменные):
{{{
lib/jpeg/($TargetCPU)-($TargetOS)
lib/ogg/($TargetCPU)-($TargetOS)
lib/zlib/($TargetCPU)-($TargetOS)
}}}

В случаи с компиляцией под Windows необходимо еще следующее:
{{{
lib/msvcrt/($TargetCPU)
}}}

Так же предусмотрен каталог с объектными файлами для Chipmunk, если используется статическая компиляция для него:
{{{
lib/chipmunk/($TargetCPU)-($TargetOS)
}}}

== Настройка сборки ZenGL ==

Для настройки сборки ZenGL предусмотрено два файла - *zgl_config.cfg* и *zgl_fpc.cfg*. Второй файл предназначен исключительно для FreePascal и постороннего вмешательства не требует. Все "опции" включаются/выключаются простым комментированием/раскомментированием дефайнов.
Первые строчки zgl_config.cfg содержат секции для разных ОС, но изменять можно лишь следующие:
  * *USE_LIBJPEG*(только для Windows) - использовать ли оригинальный libjpeg вместо стандартного способа загрузки jpeg
  * *USE_OPENAL*(только для Windows) - использовать ли OpenAL вместо DirectSound

Следующая группа дефайнов позволяет отключить определенный функционал:
  * *USE_JOYSTICK* - обработка джойстика
  * *USE_TEXTURE_ATLAS* - текстурные атласы
  * *USE_SENGINE* - процедурный менеджер спрайтов
  * *USE_PARTICLES* - система частиц
  * *USE_SOUND* - звуковая подсистема

*USE_LOG_FLUSH* включает/выключает немедленную запись каждого сообщения в логфайл. Необходимо лишь в крайних случаях и только под Windows. При включенном состоянии замедляет запись сообщений в логфайл.<br>
Еще один доступный дефайн - *USE_OGG_STATIC*. Предназначен пока только для FreePascal. Включает статическую компиляцию с библиотеками libogg, libvorbis и libvorbisfile, необходимыми для проигрывания аудио-файлов в формате ogg.
