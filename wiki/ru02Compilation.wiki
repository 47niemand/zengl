= Компиляция =

ZenGL поддерживает два основных компилятора языка Pascal - FreePascal и Delphi. На данной странице описаны основные моменты и возможные проблемы при компиляции.

== Поддерживаемые версии компиляторов ==

=== FreePascal ===

Поддерживаются все версии из веток 2.4.x и 2.2.x. При использовании FreePascal 2.2.x настоятельно рекомендуется обновиться до версии 2.2.4.

=== Delphi ===

ZenGL проверяется на совместимость с Delphi 7, Delphi 2009 и Delphi 2010. Компиляция возможна и в других версиях, но официально совместимость не проверяется, посему сообщайте о возникающих проблемах с версиями выше 7й.

== Компиляция ZenGL в разных ОС ==

=== GNU/Linux ===

Для компиляции в GNU/Linux с ZenGL поставляется Makefile и файл проекта для Lazarus. Makefile находится в директории *src* вместе с исходным кодом библиотеки. Файл проекта для Lazarus находится в директории *src/Lazarus*. При помощи Makefile так же возможна кросскомпиляция под Windows(команды *make win32* и *make win64*).

Дополнительно для компиляции в некоторых дистрибутивах(например в Debian и Ubuntu) потребуются некоторые dev-пакеты. *TODO: собрать точный список*

=== Windows ===

Для Windows существует два способа компиляции - при помощи Delphi и Lazarus. Файлы проектов для этих IDE находятся в директориях *Delphi* и *Lazarus* внутри директории с исходным кодом - *src*. При использовании Lazarus рекомендуется использовать файл проекта *ZenGL-win.lpi*

=== MacOS X ===

Как и при компиляции в GNU/Linux в MacOS X доступен Makefile. Вместо обычной команды *make* нужно выполнить *make macos*, после чего будет скомпилирована универсальная библиотека dylib для архитектур x86 и PowerPC.

*Возможные проблемы:* ввиду проблем с линкером в XCode из MacOS X 10.6 ваши приложения могут не запускаться на более ранних версиях MacOS X. При компиляции из под MacOS X 10.4 и 10.5 подобной проблемы не возникает.

== Настройка сборки ZenGL ==

Для настройки сборки ZenGL предусмотрено два файла - *zgl_config.cfg* и *zgl_fpc.cfg*. Второй файл предназначен исключительно для FreePascal. Все "опции" включаются/выключаются простым комментированием/раскомментированием дефайнов.

=== zgl_config.cfg ===

Первые строчки данного файла содержат секции для разных ОС, но изменять можно лишь следующие:
  * *USE_OGG_FROM_SYSTEM* отвечает за то, где будет происходить поиск *.a* файлов для статической компиляции с libogg, libvorbis и libvorbisfile
  * *USE_PASJPEG*(только для Windows) - использовать ли PasJPEG вместо стандартного способа загрузки jpeg
  * *USE_OPENAL*(только для Windows) - использовать ли OpenAL вместо DirectSound

Следующая группа дефайнов позволяет отключить ненужный функционал:
  * *USE_JOYSTICK* - обработка джойстика
  * *USE_TEXTURE_ATLAS* - текстурные атласы
  * *USE_SENGINE* - процедурный менеджер спрайтов
  * *USE_PARTICLES* - система частиц
  * *USE_SOUND* - звуковая подсистема

*USE_LOG_FLUSH* включает/выключает немедленную запись каждого сообщения в логфайл. Необходимо лишь в крайних случаях и только под Windows. При включенном состоянии замедляет запись сообщений в логфайл

=== zgl_fpc.cfg ===

*USE_OGG_STATIC* - единственный доступный для редактирования дефайн. Он отвечает за статическую сборку ZenGL с библиотеками libogg, libvorbis и libvorbisfile. Для статической сборки необходимы *.a* и *.o* файлы. Ниже представлен список архивов с необходимыми файлами для разных ОС:
  * [http://www.andru-kun.inf.ua/zengl/extra/libogg-static-linux.tar.bz2 GNU/Linux] - для сборки x86 и x86_64 приложений
  * [http://www.andru-kun.inf.ua/zengl/extra/libogg-static-win32.7z Windows] - только для статической сборки с 32-битными приложениями
  * [http://www.andru-kun.inf.ua/zengl/extra/libogg-static-macos.zip MacOS X] - для архитектур x86 и PowerPC

Обычно все необходимые файлы для GNU/Linux присутствуют в /usr/lib и при объявлении *USE_OGG_FROM_SYSTEM* можно использовать их, но не во всех дистрибутивах они есть(к примеру в ArchLinux).
